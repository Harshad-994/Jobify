@using JMS_Presentation.ViewModels
@model List<JobCategoryViewModel>;
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Job Categories";
}

@* modal for deleteing a category*@
<div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this category?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn secondaryBtn" data-bs-dismiss="modal">No</button>
                <button type="button" class="btn primaryBtn confirmDelete">Yes</button>
            </div>
        </div>
    </div>
</div>


<div class="content-body">
    <h2 class="primaryText mb-2">All Categories</h2>
    <div class="d-flex justify-content-end align-items-center gap-3 mb-4">
        <div class="position-relative">
            <input class="form-control searchInput" type="text" id="searchCategory" placeholder="Search" />
            <i class="fa-solid fa-magnifying-glass position-absolute end-0 top-0 pt-2 pe-2 fs-5"></i>
        </div>
        <a class="btn primaryBtn" href="@Url.Action("AddCategory", "JobCategory")">
            <i class=" fas fa-plus me-2"></i>
            Add Category
        </a>
    </div>

    <div class="table-responsive">
        <table class="table" id="categoryTable">
            <thead class="">
                <tr>
                    <th>Category</th>
                    <th>Jobs</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (JobCategoryViewModel category in Model)
                {
                    <tr data-id="@category.Id">
                        <td>
                            <div class="category-name d-flex align-items-center gap-2">
                                <i class="fas fa-tags"></i>
                                @category.Name
                            </div>
                        </td>
                        <td>
                            <span class="job-count">@category.TotalNoOfJobs jobs</span>
                        </td>
                        <td>
                            <div class="d-flex gap-4 p-1 actions">
                                <a href="@Url.Action("EditCategory", "JobCategory", new { categoryId = category.Id })"><i
                                        class="fa-solid fa-pen"></i></a>
                                <i class="fas fa-trash deleteCategoryBtn" data-bs-toggle="modal"
                                    data-bs-target="#deleteCategoryModal"></i>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="" id="categoriesPagination">
        @await Html.PartialAsync("_Pagination")
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            var currentPage = 1;
            var pageSize = $('#categoriesPagination .pageSize').val() || 5;
            var totalPages = 1;
            var totalCount = 0;
            var searchText = "";

            function renderCategories(renderMarkup = true) {
                var filter = {
                    page: currentPage,
                    pageSize: pageSize,
                    SearchText: searchText
                };
                $.ajax({
                    url: '@Url.Action("GetAllCategories", "JobCategory")' + "?" + $.param(filter),
                    type: 'GET',
                    success: function (res) {
                        totalCount = res?.totalCount;
                        totalPages = res?.totalPages;
                        currentPage = res?.page;
                        updatePagination();
                        if (!renderMarkup) {
                            return;
                        }
                        var categories = res?.items;
                        var tableBody = $('#categoryTable tbody');
                        tableBody.empty();
                        categories.forEach(category => {
                            var row = `<tr data-id="${category.id}"><td><div class="category-name d-flex align-items-center gap-2"><i class="fas fa-tags"></i>${category.name}</div></td><td><span class="job-count">${category.totalNoOfJobs} jobs</span></td><td><div class="d-flex gap-4 p-1 actions"><a href="${`/JobCategory/EditCategory?categoryId=${category.id}`}"><i class="fa-solid fa-pen"></i></a><i class="fas fa-trash deleteCategoryBtn" data-bs-toggle="modal"data-bs-target="#deleteCategoryModal"></i></div></td></tr>`;
                            tableBody.append(row);
                        });
                    },
                    error: function (xhr, status, error) {
                        var errorObj = JSON.parse(xhr.responseText);
                        errorToast(errorObj.message);
                    }
                });
            }

            renderCategories(false);

            $(document).on('click', '.deleteCategoryBtn', function () {
                var categoryId = $(this).closest('tr').data('id');
                $("#deleteCategoryModal .confirmDelete").attr('categoryId', categoryId);
            });

            $(document).on('click', '#deleteCategoryModal .confirmDelete', function () {
                var categoryId = $(this).attr('categoryId');
                $.ajax({
                    url: '@Url.Action("DeleteCategory", "JobCategory")',
                    type: 'POST',
                    data: { categoryId: categoryId },
                    success: function (response) {
                        if (response?.success) {
                            successToast(response?.message);
                            if ($("#categoryTable tbody").find("tr").length == 1 && currentPage > 1) {
                                currentPage--;
                            }
                            renderCategories();
                            $("#deleteCategoryModal").modal("hide");
                        }
                    },
                    error: function (xhr, status, error) {
                        var errorObj = JSON.parse(xhr.responseText);
                        errorToast(errorObj.message);
                    }
                });
            });

            function updatePagination() {
                $('#categoriesPagination .pagination .stats').text(`Showing ${totalCount != 0 ? ((currentPage - 1) * pageSize) + 1 : 0}-${Math.min(currentPage * pageSize, totalCount)} of ${totalCount}`);
                $('#categoriesPagination .pageSize').val(pageSize);

                // Enable/disable pagination buttons
                $('#categoriesPagination .prev-page').prop('disabled', currentPage === 1);
                $('#categoriesPagination .next-page').prop('disabled', currentPage === totalPages);
            }

            //to go on previous page
            $('#categoriesPagination .prev-page').click(function () {
                if (currentPage > 1) {
                    currentPage--;
                    renderCategories()
                }
            });

            //to go on next page
            $('#categoriesPagination .next-page').click(function () {
                if (currentPage < totalPages) {
                    currentPage++;
                    renderCategories();
                }
            });

            //changing the value of the pagesize on changing of the drop down
            $(document).on('change', '#categoriesPagination .pageSize', function () {
                pageSize = $(this).val();
                currentPage = 1;
                renderCategories();
            });

            //searching the category
            $('#searchCategory').on('input', debounce(function () {
                searchText = $(this).val();
                currentPage = 1;
                renderCategories();
            }));

        });
    </script>
}